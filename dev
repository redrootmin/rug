#!/bin/bash
#creator by RedRoot(Yaciyna Mikhail) for GAMER STATION [on linux] and Gaming Community OS Linux
# GPL-3.0 License 

# первичные переменные
site_packegs="https://abf.rosalinux.ru"
site_source_app="https://github.com/"
PATH_USER_CONF="/home/${USER}/.config_rug"
start_date=$(date +"%d.%m.%Y-%H:%M:%S")

#определяем какая система запустила ggs
linuxos_version=`cat "/etc/os-release" | grep "PRETTY_NAME" | sed 's/PRETTY_NAME=//g' | sed 's/"//g'`
linuxos_gnome="true"


(
echo первый набор комманд
sleep 2
echo 15
sleep 2
echo 30
sleep 2
echo 90
) | yad --progress --enable-log=terminal --log-expanded  --log-on-top --log-height 256 --bar "":perm




exit 1


linux_os_test() {
    # проверка что линукс система с рабочим окружением GNOME
    if [ ! -e /usr/bin/gnome-shell ];then linuxos_gnome="false";fi

    #проверяем что система совместима с RUG
    if echo "${linuxos_version}" | grep -ow "ROSA Fresh Desktop" > /dev/null && echo "${linuxos_gnome}" | grep -ow "true" > /dev/null
        then
            #tput setaf 3;echo -n "$1:";tput setaf 2;echo "$package_status";tput sgr 0
            tput sgr 0;echo -n "Операциооная система: ${linuxos_version} [GNOME]";tput setaf 2;echo -n " СОВМЕСТИМА";tput sgr 0;echo " с RUG"
            tput sgr 0
            LINUXOS_RUN="rosa"

                else
                tput sgr 0;echo -n "Операциооная система: ${linuxos_version} [GNOME]";tput setaf 1;echo -n " НЕ СОВМЕСТИМА";tput sgr 0;echo " с RUG"
                # GTK_THEME="Adwaita-dark" zenity --error --ellipsize  --timeout=5 --text="Данная операционная система [${linuxos_version}] не совместима с RUG"
                exit 1
fi
}

no_root() {

    if [ "$UID" -eq 0 ];then
         echo -n "скрипт не запущен из под root";tput setaf 1;echo " - НЕТ!";tput sgr0;exit 1
        else
        echo -n "скрипт не запущен из под root";tput setaf 2;echo " - ДА!";tput sgr0
    fi
}


internet_check() {
 site_internet_test="$1"
 INTERNET_CHECK="0"
      # проверка на наличие сетевого доступа до ресурса
      wget -q --spider ${site_internet_test}
      if [ $? -eq 0 ]; then
          INTERNET_CHECK="1"
      fi
  
}


start_test_rug() {

 #!проверяем что скрипт установки не запущен от пользователя root
 no_root

 #!проверяем что система совместима с RUG
 linuxos_version=$1
  echo -n "Версия операционной системы Линукс";tput setaf 2;echo " - [$linuxos_version]";tput sgr0
  linux_os_test "$linuxos_version"

    #! Проверяем интернет ресурсы
    SITE_APP="0"
  # проверка на наличие доступа до ресурса с пакетами для установки
  site_packegs=$2
  internet_check $site_packegs
      if [ "$INTERNET_CHECK" -eq 0 ]; then

          echo -n "Доступа до ресурса [$site_packegs]";tput setaf 1;echo " - НЕТ!";tput sgr0
          else 
           echo -n "Доступ до ресурса [$site_packegs]";tput setaf 2;echo " - ЕСТЬ!";tput sgr0
           SITE_APP="1"
      fi
    SITE_SOURCE="0"
        # проверка на наличие доступа до ресурса с исходным кодом
        site_source_app=$3
        internet_check $site_source_app
              if [ "$INTERNET_CHECK" -eq 0 ]; then

          echo -n "Доступа до ресурса [$site_source_app]";tput setaf 1;echo " - НЕТ!";tput sgr0
          else 
           echo -n "Доступ до ресурса [$site_source_app]";tput setaf 2;echo " - ЕСТЬ!";tput sgr0
           SITE_SOURCE="1"
      fi


}

core_conf_create () {
    # В РАРАБОТКЕ!
    # Проверка что существует папка конфигурации пользователя в его окружении, если нет, создаем ее и копируем туда конфиг по умолчанию
    if [ ! -d "$PATH_USER_CONF" ]
    then
    #! папки .config_rug нет в окружении пользователя, создаем!
        tput setaf 1; echo "папки .kmv-config нет в окружении пользователя $USER, создаем";tput sgr0
        mkdir -p "/home/${USER}/.kmv-config"
        PATH_USER_CONF="/home/${USER}/.kmv-config"
        cp -RT "$PATH_CORE_APP/data/.kmv-config" "$PATH_USER_CONF"
        ln -s "/home/$USER/.kmv-config" "$PATH_CORE_APP/.kmv-config"
        tput setaf 2; echo "папка конфигурации пользователя расположена [$PATH_USER_CONF]";tput sgr0
        else
            PATH_USER_CONF="/home/${USER}/.kmv-config"
            tput setaf 2; echo "папка конфигурации пользователя расположена [$PATH_USER_CONF]";tput sgr0
    fi
}

# ОСНОВНЫЕ КОМАНДЫ RUG

case "$1" in

"-test"|"-T")
start_test_rug "$linuxos_version" "$site_packegs" "$site_source_app"
;;

"-t"|"-cli")
tput setaf 1
echo "терминальный режим на стадии разработки!"
tput sgr0
;;

"-G"|"-gui")
tput setaf 1
echo "графический режим на стадии разработки!"
tput sgr0
;;

*)
echo "###RUG - Rosa Utility for GAMING - КОВРИК###
-T или -test           -тест системы на совместимость и проверка ресурсов
-t или -cli               - работа в режиме терминала
-G или -gui            - работа с установленным по умолчанию графическим меню
"
;;
esac


exit 1


# функция проверки окружения rug
# Проверка что существует папка конфигурации пользователя в его окружении, если нет, создаем ее и копируем туда конфиг по умолчанию
if [ ! -d "/home/${USER}/.config_rug" ]
    then
    core_conf_create ()
fi


# путь до главного каталога rug
PATH_CORE_APP=$(cd $(dirname "$0") && pwd);
#|| echo "ошибка определения главного каталога kmv"
echo "Главный каталог rug [$PATH_CORE_APP]"
cd "$PATH_CORE_APP"
# определение версии kmv
VERSION_RUG=`cat version` || echo "ошибка определения версии программы"
NAME_APP=`cat name-app` || echo "ошибка определения названия программы"
FULL_NAME_APP="$NAME_APP[$VERSION_KMV]"
echo "полное назваие программы - $FULL_NAME_APP"

# Проверка что существует папка applications в окружении пользователя, если нет, создаем ее
if [ ! -d "/home/${USER}/.local/share/applications" ]
then
mkdir -p "/home/${USER}/.local/share/applications"
fi

LINUXOS_VERSION=`cat "/etc/os-release" | grep "PRETTY_NAME" | sed 's/PRETTY_NAME=//g' | sed 's/"//g'` || echo "["`$date`"]"" - Ошибка определения операционной системы в которой запускается " >> $PATH_USER_CONF/logs/kvm-core.log


start_conf_create

# подключение библиотек внешних
source "$PATH_CORE_APP/lib/lib-sys-kmv.sh" || echo "["`$date`"]"" - Ошибка загрузки системной библиотеки [/lib/lib-sys-kmv.sh]" >> $PATH_USER_CONF/logs/kvm-core.log
# проверяем что есть интернет
internet_check
#echo " есть связь с интернетом ? [$INTERNET]"
if [ "$INTERNET" == "no" ]; then 
tput setaf 1; echo "нет соединения с глобальной сетью, функционал $FULL_NAME_APP будет ограничен!";tput sgr0; 
else 
tput setaf 2; echo "есть соединение с глобальной сетью!";tput sgr0; 
fi

if echo "$LINUXOS_VERSION" | grep -ow "ROSA Fresh Desktop" > /dev/null; then 
tput setaf 2; echo "$FULL_NAME_APP поддерживает $LINUXOS_VERSION";tput sgr0
else
zenity --error --ellipsize  --timeout=5 --text="Данная операционная система $LINUXOS_VERSION не совместима с $FULL_NAME_APP"
fi
